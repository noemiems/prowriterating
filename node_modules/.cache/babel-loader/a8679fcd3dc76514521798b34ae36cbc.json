{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/paragraphlevelform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ParagraphLevel(props) {\n  _s();\n\n  const [count, setCount] = useState(1);\n  const [input, setInput] = useState({\n    selectOptions: [],\n    title: '',\n    type: 'paragraphlevel',\n    rater: '',\n    paragraph: count,\n    currentparagraph: '',\n    text1: '',\n    text2: '',\n    text3: '',\n    text4: '',\n    text5: ''\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setInput(prevInput => {\n      return { ...prevInput,\n        [name]: value\n      };\n    });\n  }\n\n  ;\n\n  function onClickPrevious() {\n    if (count > 1) {\n      setCount(prevCount => prevCount - 1);\n    }\n  }\n\n  function onClickNext() {\n    if (count < props.paragraphnum) {\n      setCount(prevCount => prevCount + 1);\n    }\n  }\n\n  let entiretext = props.text;\n  let splittedtext = entiretext.split(/\\r?\\n/);\n  let filteredtext = splittedtext.filter(item => item);\n  let currentparagraph = filteredtext[count - 1];\n\n  function handleClick(event) {\n    event.preventDefault();\n    const newNote = {\n      title: props.title,\n      type: 'paragraphlevel',\n      paragraph: count,\n      rater: props.rater,\n      text1: input.text1,\n      text2: input.text2,\n      text3: input.text3,\n      text4: input.text4,\n      text5: input.text5\n    };\n    axios.post('http://localhost:8080/create', newNote);\n    setInput({\n      title: '',\n      paragraph: '',\n      rater: props.rater,\n      text1: '',\n      text2: '',\n      text3: '',\n      text4: '',\n      text5: ''\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      marginTop: '5%',\n      fontSize: \"80%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        letterSpacing: '1px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          padding: \"1%\",\n          borderStyle: 'solid',\n          backgroundColor: '#252d4a',\n          fontSize: '16px',\n          fontWeight: '500',\n          color: 'white',\n          borderColor: 'darkgray'\n        },\n        children: currentparagraph\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {\n          onClick: onClickPrevious,\n          style: {\n            fontSize: '200%',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), \"paragraph \", count, \"/\", props.paragraphnum, /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n          onClick: onClickNext,\n          style: {\n            fontSize: '200%',\n            cursor: 'pointer'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '3%',\n          fontWeight: 'bold'\n        },\n        children: \"How many main ideas are discussed in this paragraph? See definition of a \\\"main idea\\\" above. To distinguish between \\\"main ideas\\\" and simply supporting ideas, consider how main ideas are broad; supporting ideas can be subsumed under a broader main idea category. Paragraphs may provide clues such as transitions to indicate separate ideas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"text1\",\n          value: input.text1,\n          autoComplete: \"off\",\n          placeholder: \"Enter number\",\n          className: \"form-control\",\n          style: {\n            marginTop: '2%',\n            width: '20%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"How well does this paragraph develop from / fit with the thesis statement (if applicable) and prompt?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"text2\",\n          value: input.text2,\n          autoComplete: \"off\",\n          placeholder: \"Enter number\",\n          className: \"form-control\",\n          style: {\n            marginTop: '2%',\n            width: '20%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"How well does this paragraph connect to/transition from/follow the previous paragraph? Write \\\"N/A\\\" if there is only one paragraph in the whole text.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"text3\",\n          value: input.text3,\n          autoComplete: \"off\",\n          placeholder: \"Enter number\",\n          className: \"form-control\",\n          style: {\n            marginTop: '2%',\n            width: '20%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"How well does this paragraph evidence the claim made in the topic sentence? Write N/A if there is no topic sentence.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"text4\",\n          value: input.text4,\n          autoComplete: \"off\",\n          placeholder: \"Enter number\",\n          className: \"form-control\",\n          style: {\n            marginTop: '2%',\n            width: '20%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"On a scale of 1 to 4, how strong is this paragraph's topic sentence? Write N/A if there is no topic sentence.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"text5\",\n          value: input.text5,\n          autoComplete: \"off\",\n          placeholder: \"Enter number\",\n          className: \"form-control\",\n          style: {\n            marginTop: '2%',\n            width: '20%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: '45%'\n        },\n        onClick: handleClick,\n        className: \"btn btn-lg btn-info\",\n        children: \"DONE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ParagraphLevel, \"sIn6XodyxUKHrsISPtsFYeJIZ6k=\");\n\n_c = ParagraphLevel;\n;\nexport default ParagraphLevel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParagraphLevel\");","map":{"version":3,"sources":["/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/paragraphlevelform.js"],"names":["React","useState","axios","NavigateBeforeIcon","NavigateNextIcon","ParagraphLevel","props","count","setCount","input","setInput","selectOptions","title","type","rater","paragraph","currentparagraph","text1","text2","text3","text4","text5","handleChange","event","name","value","target","prevInput","onClickPrevious","prevCount","onClickNext","paragraphnum","entiretext","text","splittedtext","split","filteredtext","filter","item","handleClick","preventDefault","newNote","post","marginTop","fontSize","letterSpacing","padding","borderStyle","backgroundColor","fontWeight","color","borderColor","cursor","width","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AAC/BU,IAAAA,aAAa,EAAG,EADe;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,IAAI,EAAE,gBAHyB;AAI/BC,IAAAA,KAAK,EAAE,EAJwB;AAK/BC,IAAAA,SAAS,EAAER,KALoB;AAM/BS,IAAAA,gBAAgB,EAAE,EANa;AAO/BC,IAAAA,KAAK,EAAE,EAPwB;AAQ/BC,IAAAA,KAAK,EAAE,EARwB;AAS/BC,IAAAA,KAAK,EAAE,EATwB;AAU/BC,IAAAA,KAAK,EAAE,EAVwB;AAW/BC,IAAAA,KAAK,EAAE;AAXwB,GAAD,CAAlC;;AAcA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AAEAhB,IAAAA,QAAQ,CAACiB,SAAS,IAAI;AAClB,aAAO,EACH,GAAGA,SADA;AAEH,SAACH,IAAD,GAAQC;AAFL,OAAP;AAIH,KALO,CAAR;AAMH;;AAAA;;AAED,WAASG,eAAT,GAA0B;AACtB,QAAIrB,KAAK,GAAG,CAAZ,EAAe;AACXC,MAAAA,QAAQ,CAACqB,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAR;AACH;AACJ;;AAED,WAASC,WAAT,GAAsB;AAClB,QAAIvB,KAAK,GAAGD,KAAK,CAACyB,YAAlB,EAAgC;AAC5BvB,MAAAA,QAAQ,CAACqB,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAR;AACH;AACJ;;AAGD,MAAIG,UAAU,GAAG1B,KAAK,CAAC2B,IAAvB;AACA,MAAIC,YAAY,GAAGF,UAAU,CAACG,KAAX,CAAiB,OAAjB,CAAnB;AACA,MAAIC,YAAY,GAAGF,YAAY,CAACG,MAAb,CAAoBC,IAAI,IAAIA,IAA5B,CAAnB;AACA,MAAItB,gBAAgB,GAAGoB,YAAY,CAAC7B,KAAK,GAAC,CAAP,CAAnC;;AAEA,WAASgC,WAAT,CAAqBhB,KAArB,EAA4B;AACxBA,IAAAA,KAAK,CAACiB,cAAN;AACI,UAAMC,OAAO,GAAE;AACX7B,MAAAA,KAAK,EAAEN,KAAK,CAACM,KADF;AAEXC,MAAAA,IAAI,EAAE,gBAFK;AAGXE,MAAAA,SAAS,EAAER,KAHA;AAIXO,MAAAA,KAAK,EAAER,KAAK,CAACQ,KAJF;AAKXG,MAAAA,KAAK,EAAER,KAAK,CAACQ,KALF;AAMXC,MAAAA,KAAK,EAAET,KAAK,CAACS,KANF;AAOXC,MAAAA,KAAK,EAAEV,KAAK,CAACU,KAPF;AAQXC,MAAAA,KAAK,EAAEX,KAAK,CAACW,KARF;AASXC,MAAAA,KAAK,EAAEZ,KAAK,CAACY;AATF,KAAf;AAYAnB,IAAAA,KAAK,CAACwC,IAAN,CAAW,8BAAX,EAA2CD,OAA3C;AAEA/B,IAAAA,QAAQ,CAAC;AACTE,MAAAA,KAAK,EAAE,EADE;AAETG,MAAAA,SAAS,EAAE,EAFF;AAGTD,MAAAA,KAAK,EAAER,KAAK,CAACQ,KAHJ;AAITG,MAAAA,KAAK,EAAE,EAJE;AAKTC,MAAAA,KAAK,EAAE,EALE;AAMTC,MAAAA,KAAK,EAAE,EANE;AAOTC,MAAAA,KAAK,EAAE,EAPE;AAQTC,MAAAA,KAAK,EAAE;AARE,KAAD,CAAR;AAUP;;AAAA;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAACsB,MAAAA,SAAS,EAAC,IAAX;AAAiBC,MAAAA,QAAQ,EAAC;AAA1B,KAAlC;AAAA,2BAEA;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAC;AAAf,OAAb;AAAA,8BACA;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAC,IAAT;AAAeC,UAAAA,WAAW,EAAC,OAA3B;AAAoCC,UAAAA,eAAe,EAAC,SAApD;AAA+DJ,UAAAA,QAAQ,EAAC,MAAxE;AAAgFK,UAAAA,UAAU,EAAC,KAA3F;AAAkGC,UAAAA,KAAK,EAAC,OAAxG;AAAiHC,UAAAA,WAAW,EAAC;AAA7H,SAAV;AAAA,kBAAqJnC;AAArJ;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,gCAAI,QAAC,kBAAD;AAAoB,UAAA,OAAO,EAAEY,eAA7B;AAA8C,UAAA,KAAK,EAAE;AAACgB,YAAAA,QAAQ,EAAC,MAAV;AAAkBQ,YAAAA,MAAM,EAAC;AAAzB;AAArD;AAAA;AAAA;AAAA;AAAA,gBAAJ,gBACW7C,KADX,OACmBD,KAAK,CAACyB,YADzB,eAEA,QAAC,gBAAD;AAAkB,UAAA,OAAO,EAAED,WAA3B;AAAwC,UAAA,KAAK,EAAE;AAACc,YAAAA,QAAQ,EAAC,MAAV;AAAkBQ,YAAAA,MAAM,EAAC;AAAzB;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAMA;AAAG,QAAA,KAAK,EAAE;AAACT,UAAAA,SAAS,EAAC,IAAX;AAAiBM,UAAAA,UAAU,EAAC;AAA5B,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,eAQI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAO,UAAA,QAAQ,EAAE3B,YAAjB;AAA+B,UAAA,IAAI,EAAC,OAApC;AAA4C,UAAA,KAAK,EAAEb,KAAK,CAACQ,KAAzD;AAAgE,UAAA,YAAY,EAAC,KAA7E;AAAmF,UAAA,WAAW,EAAC,cAA/F;AAA8G,UAAA,SAAS,EAAC,cAAxH;AAAuI,UAAA,KAAK,EAAE;AAAC0B,YAAAA,SAAS,EAAC,IAAX;AAAiBU,YAAAA,KAAK,EAAC;AAAvB;AAA9I;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ,eAYA;AAAG,QAAA,KAAK,EAAE;AAACJ,UAAAA,UAAU,EAAC;AAAZ,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZA,eAaI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAO,UAAA,QAAQ,EAAE3B,YAAjB;AAA+B,UAAA,IAAI,EAAC,OAApC;AAA4C,UAAA,KAAK,EAAEb,KAAK,CAACS,KAAzD;AAAgE,UAAA,YAAY,EAAC,KAA7E;AAAmF,UAAA,WAAW,EAAC,cAA/F;AAA8G,UAAA,SAAS,EAAC,cAAxH;AAAuI,UAAA,KAAK,EAAE;AAACyB,YAAAA,SAAS,EAAC,IAAX;AAAiBU,YAAAA,KAAK,EAAC;AAAvB;AAA9I;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ,eAiBA;AAAG,QAAA,KAAK,EAAE;AAACJ,UAAAA,UAAU,EAAC;AAAZ,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBA,eAkBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAO,UAAA,QAAQ,EAAE3B,YAAjB;AAA+B,UAAA,IAAI,EAAC,OAApC;AAA4C,UAAA,KAAK,EAAEb,KAAK,CAACU,KAAzD;AAAgE,UAAA,YAAY,EAAC,KAA7E;AAAmF,UAAA,WAAW,EAAC,cAA/F;AAA8G,UAAA,SAAS,EAAC,cAAxH;AAAuI,UAAA,KAAK,EAAE;AAACwB,YAAAA,SAAS,EAAC,IAAX;AAAiBU,YAAAA,KAAK,EAAC;AAAvB;AAA9I;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAsBA;AAAG,QAAA,KAAK,EAAE;AAACJ,UAAAA,UAAU,EAAC;AAAZ,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBA,eAuBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAO,UAAA,QAAQ,EAAE3B,YAAjB;AAA+B,UAAA,IAAI,EAAC,OAApC;AAA4C,UAAA,KAAK,EAAEb,KAAK,CAACW,KAAzD;AAAgE,UAAA,YAAY,EAAC,KAA7E;AAAmF,UAAA,WAAW,EAAC,cAA/F;AAA8G,UAAA,SAAS,EAAC,cAAxH;AAAuI,UAAA,KAAK,EAAE;AAACuB,YAAAA,SAAS,EAAC,IAAX;AAAiBU,YAAAA,KAAK,EAAC;AAAvB;AAA9I;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvBJ,eA2BA;AAAG,QAAA,KAAK,EAAE;AAACJ,UAAAA,UAAU,EAAC;AAAZ,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BA,eA4BI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAO,UAAA,QAAQ,EAAE3B,YAAjB;AAA+B,UAAA,IAAI,EAAC,OAApC;AAA4C,UAAA,KAAK,EAAEb,KAAK,CAACY,KAAzD;AAAgE,UAAA,YAAY,EAAC,KAA7E;AAAmF,UAAA,WAAW,EAAC,cAA/F;AAA8G,UAAA,SAAS,EAAC,cAAxH;AAAuI,UAAA,KAAK,EAAE;AAACsB,YAAAA,SAAS,EAAC,IAAX;AAAgBU,YAAAA,KAAK,EAAC;AAAtB;AAA9I;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA5BJ,eAgCI;AAAQ,QAAA,KAAK,EAAE;AAACC,UAAAA,UAAU,EAAC;AAAZ,SAAf;AAAmC,QAAA,OAAO,EAAEf,WAA5C;AAAyD,QAAA,SAAS,EAAC,qBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCE;;GA/GGlC,c;;KAAAA,c;AA+GH;AAEN,eAAeA,cAAf","sourcesContent":["import React, {useState} from 'react';\nimport axios from \"axios\";\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nfunction ParagraphLevel(props) {\n    const [count, setCount] = useState(1);\n    const [input, setInput] = useState({\n        selectOptions : [],\n        title: '',\n        type: 'paragraphlevel',\n        rater: '',\n        paragraph: count,\n        currentparagraph: '',\n        text1: '',\n        text2: '',\n        text3: '',\n        text4: '',\n        text5: '',\n    })\n\n    function handleChange(event) {\n        const {name, value} = event.target;\n\n        setInput(prevInput => {\n            return {\n                ...prevInput,\n                [name]: value\n            }\n        })\n    };\n\n    function onClickPrevious(){\n        if (count > 1) {\n            setCount(prevCount => prevCount - 1)\n        }\n    }\n\n    function onClickNext(){\n        if (count < props.paragraphnum) {\n            setCount(prevCount => prevCount + 1)\n        }\n    }\n\n\n    let entiretext = props.text;\n    let splittedtext = entiretext.split(/\\r?\\n/);\n    let filteredtext = splittedtext.filter(item => item);\n    let currentparagraph = filteredtext[count-1];\n\n    function handleClick(event) {\n        event.preventDefault();\n            const newNote= {\n                title: props.title,\n                type: 'paragraphlevel',\n                paragraph: count,\n                rater: props.rater,\n                text1: input.text1,\n                text2: input.text2,\n                text3: input.text3,\n                text4: input.text4,\n                text5: input.text5\n            }\n            \n            axios.post('http://localhost:8080/create', newNote)\n    \n            setInput({\n            title: '',\n            paragraph: '',\n            rater: props.rater,\n            text1: '',\n            text2: '',\n            text3: '',\n            text4: '',\n            text5: '',\n              })\n    };\n\n    return ( \n        <div className='container' style={{marginTop:'5%', fontSize:\"80%\"}}>\n        \n        <form style={{letterSpacing:'1px'}}>\n        <p style={{padding:\"1%\", borderStyle:'solid', backgroundColor:'#252d4a', fontSize:'16px', fontWeight:'500', color:'white', borderColor:'darkgray'}}>{currentparagraph}</p>\n        <h3><NavigateBeforeIcon onClick={onClickPrevious} style={{fontSize:'200%', cursor:'pointer'}}/> \n        paragraph {count}/{props.paragraphnum} \n        <NavigateNextIcon onClick={onClickNext} style={{fontSize:'200%', cursor:'pointer'}}/></h3>\n\n        <p style={{marginTop:'3%', fontWeight:'bold'}}>How many main ideas are discussed in this paragraph? See definition of a \"main idea\" above. To distinguish between \"main ideas\" and simply supporting ideas, consider how\nmain ideas are broad; supporting ideas can be subsumed under a broader main idea category. Paragraphs may provide clues such as transitions to indicate separate ideas.</p>\n            <div className=\"form-group\">\n                <input onChange={handleChange} name=\"text1\" value={input.text1} autoComplete=\"off\" placeholder=\"Enter number\" className=\"form-control\" style={{marginTop:'2%', width:'20%'}}></input>\n            </div>\n\n        <p style={{fontWeight:'bold'}}>How well does this paragraph develop from / fit with the thesis statement (if applicable) and prompt?</p>\n            <div className=\"form-group\">\n                <input onChange={handleChange} name=\"text2\" value={input.text2} autoComplete=\"off\" placeholder=\"Enter number\" className=\"form-control\" style={{marginTop:'2%', width:'20%'}}></input>\n            </div>\n\n        <p style={{fontWeight:'bold'}}>How well does this paragraph connect to/transition from/follow the previous paragraph? Write \"N/A\" if there is only one paragraph in the whole text.</p>\n            <div className=\"form-group\">\n                <input onChange={handleChange} name=\"text3\" value={input.text3} autoComplete=\"off\" placeholder=\"Enter number\" className=\"form-control\" style={{marginTop:'2%', width:'20%'}}></input>\n            </div>\n\n        <p style={{fontWeight:'bold'}}>How well does this paragraph evidence the claim made in the topic sentence? Write N/A if there is no topic sentence.</p>\n            <div className=\"form-group\">\n                <input onChange={handleChange} name=\"text4\" value={input.text4} autoComplete=\"off\" placeholder=\"Enter number\" className=\"form-control\" style={{marginTop:'2%', width:'20%'}}></input>\n            </div>\n\n        <p style={{fontWeight:'bold'}}>On a scale of 1 to 4, how strong is this paragraph's topic sentence? Write N/A if there is no topic sentence.</p>\n            <div className=\"form-group\">\n                <input onChange={handleChange} name=\"text5\" value={input.text5} autoComplete=\"off\" placeholder=\"Enter number\" className=\"form-control\" style={{marginTop:'2%',width:'20%'}}></input>\n            </div>\n\n            <button style={{marginLeft:'45%'}} onClick={handleClick} className=\"btn btn-lg btn-info\">DONE</button>\n        </form>\n        </div>\n    )};\n\nexport default ParagraphLevel;"]},"metadata":{},"sourceType":"module"}