{"ast":null,"code":"////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\"use strict\";\n\nconst {\n  MongoDBCollection\n} = require(\"./mongo_client.js\");\n\nconst {\n  promisify\n} = require(\"./utils.js\");\n\nconst instanceMethods = {\n  linkCredentials(credentials) {\n    return promisify(cb => this._linkCredentials(credentials, cb));\n  },\n\n  logOut() {\n    return promisify(cb => this._logOut(cb));\n  },\n\n  callFunction(name, args, service = undefined) {\n    return promisify(cb => this._callFunction(name, this._cleanArgs(args), service, cb));\n  },\n\n  async refreshCustomData() {\n    await promisify(cb => this._refreshCustomData(cb));\n    return this.customData;\n  },\n\n  mongoClient(serviceName) {\n    const user = this;\n    return {\n      get serviceName() {\n        return serviceName;\n      },\n\n      db(dbName) {\n        return {\n          get name() {\n            return dbName;\n          },\n\n          collection(collName) {\n            return new MongoDBCollection(user, serviceName, dbName, collName);\n          }\n\n        };\n      }\n\n    };\n  },\n\n  push(serviceName) {\n    const user = this;\n    return {\n      register(token) {\n        return promisify(cb => user._pushRegister(serviceName, token, cb));\n      },\n\n      deregister() {\n        return promisify(cb => user._pushDeregister(serviceName, cb));\n      }\n\n    };\n  },\n\n  get functions() {\n    return this._functionsOnService(undefined);\n  },\n\n  get auth() {\n    const user = this;\n    return new Proxy({}, {\n      get(target, name) {\n        if (name === \"apiKeys\") {\n          return user._authApiKeys;\n        }\n      }\n\n    });\n  },\n\n  // Internal helpers.\n  _functionsOnService(service) {\n    const user = this;\n    return new Proxy({}, {\n      get(target, name, receiver) {\n        if (typeof name === \"string\" && name != \"inspect\") {\n          return (...args) => {\n            return user.callFunction(name, args, service);\n          };\n        } else {\n          return Reflect.get(target, name, receiver);\n        }\n      }\n\n    });\n  },\n\n  _cleanArgs(args) {\n    for (const arg of args) {\n      if (typeof arg === \"object\") {\n        for (const [key, value] of Object.entries(arg)) {\n          if (value === undefined) {\n            delete arg[key];\n          }\n        }\n      }\n    }\n\n    return args;\n  }\n\n};\nconst staticMethods = {// none\n};\nmodule.exports = {\n  static: staticMethods,\n  instance: instanceMethods\n};","map":{"version":3,"sources":["/mnt/c/Users/noemie/Desktop/prowriterating/front/node_modules/realm/lib/user.js"],"names":["MongoDBCollection","require","promisify","instanceMethods","linkCredentials","credentials","cb","_linkCredentials","logOut","_logOut","callFunction","name","args","service","undefined","_callFunction","_cleanArgs","refreshCustomData","_refreshCustomData","customData","mongoClient","serviceName","user","db","dbName","collection","collName","push","register","token","_pushRegister","deregister","_pushDeregister","functions","_functionsOnService","auth","Proxy","get","target","_authApiKeys","receiver","Reflect","arg","key","value","Object","entries","staticMethods","module","exports","static","instance"],"mappings":"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","sourcesContent":["////////////////////////////////////////////////////////////////////////////\n//\n// Copyright 2020 Realm Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n////////////////////////////////////////////////////////////////////////////\n\n\"use strict\";\n\nconst {MongoDBCollection} = require(\"./mongo_client.js\");\nconst {promisify} = require(\"./utils.js\");\n\nconst instanceMethods = {\n    linkCredentials(credentials) {\n        return promisify(cb => this._linkCredentials(credentials, cb));\n    },\n\n    logOut() {\n        return promisify(cb => this._logOut(cb));\n    },\n\n    callFunction(name, args, service = undefined) {\n        return promisify(cb => this._callFunction(name, this._cleanArgs(args), service, cb));\n    },\n\n    async refreshCustomData() {\n        await promisify(cb => this._refreshCustomData(cb));\n        return this.customData;\n    },\n\n    mongoClient(serviceName) {\n        const user = this;\n        return {\n            get serviceName() {\n                return serviceName;\n            },\n\n            db(dbName) {\n                return {\n                    get name() {\n                        return dbName;\n                    },\n\n                    collection(collName) {\n                        return new MongoDBCollection(\n                            user,\n                            serviceName,\n                            dbName,\n                            collName,\n                        );\n                    },\n                };\n            },\n        };\n    },\n\n    push(serviceName) {\n        const user = this;\n        return {\n            register(token) {\n                return promisify(cb => user._pushRegister(serviceName, token, cb));\n            },\n            deregister() {\n                return promisify(cb => user._pushDeregister(serviceName, cb));\n            },\n        };\n    },\n\n    get functions() {\n        return this._functionsOnService(undefined);\n    },\n\n    get auth() {\n        const user = this;\n        return new Proxy({}, {\n            get(target, name) {\n                if (name === \"apiKeys\") {\n                    return user._authApiKeys;\n                }\n            }\n        });\n    },\n\n    // Internal helpers.\n    _functionsOnService(service) {\n        const user = this;\n        return new Proxy({}, {\n            get(target, name, receiver) {\n                if (typeof name === \"string\" && name != \"inspect\") {\n                    return (...args) => {\n                        return user.callFunction(name, args, service);\n                    };\n                } else {\n                    return Reflect.get(target, name, receiver);\n                }\n            },\n        });\n    },\n\n    _cleanArgs(args) {\n        for (const arg of args) {\n            if (typeof arg === \"object\") {\n                for (const [key, value] of Object.entries(arg)) {\n                    if (value === undefined) {\n                        delete arg[key];\n                    }\n                }\n            }\n        }\n        return args;\n    },\n}\n\nconst staticMethods = {\n    // none\n};\n\nmodule.exports = {\n    static: staticMethods,\n    instance: instanceMethods,\n};\n"]},"metadata":{},"sourceType":"script"}