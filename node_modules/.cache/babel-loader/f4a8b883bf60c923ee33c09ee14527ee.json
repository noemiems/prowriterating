{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/paragraphlevelform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ParagraphLevel(props) {\n  _s();\n\n  const [input, setInput] = useState({\n    selectOptions: [],\n    title: '',\n    type: 'paragraphlevel',\n    rater: '',\n    paragraph: props.count,\n    currentparagraph: '',\n    text1: '',\n    text2: '',\n    text3: '',\n    text4: '',\n    text5: ''\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setInput(prevInput => {\n      return { ...prevInput,\n        [name]: value\n      };\n    });\n  }\n\n  ; // function onClickPrevious(){\n  //     if (count > 1) {\n  //setCount(prevCount => prevCount - 1)\n  //     }\n  // }\n  // function onClickNext(){\n  //     if (count < props.paragraphnum) {\n  //         setCount(prevCount => prevCount + 1)\n  //     }\n  // }\n\n  function onClickNext() {\n    props.onClickNext();\n  }\n\n  function onClickPrevious() {\n    props.onClickPrevious();\n  }\n\n  let entiretext = props.text;\n  let splittedtext = entiretext.split(/\\r?\\n/);\n  let filteredtext = splittedtext.filter(item => item);\n  let currentparagraph = filteredtext[count - 1];\n\n  function handleClick(event) {\n    event.preventDefault();\n    const newNote = {\n      title: props.title,\n      type: 'paragraphlevel',\n      paragraph: count,\n      rater: props.rater,\n      text1: input.text1,\n      text2: input.text2,\n      text3: input.text3,\n      text4: input.text4,\n      text5: input.text5\n    };\n    axios.post('https://textratingtool.herokuapp.com/create', newNote);\n\n    if (count === props.paragraphnum) {\n      setCount(1);\n    }\n\n    setInput({\n      title: '',\n      paragraph: '',\n      rater: props.rater,\n      text1: '',\n      text2: '',\n      text3: '',\n      text4: '',\n      text5: ''\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      marginTop: '5%',\n      fontSize: \"80%\",\n      backgroundColor: 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        letterSpacing: '1px',\n        backgroundColor: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          backgroundColor: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(NavigateBeforeIcon, {\n          onClick: onClickPrevious,\n          style: {\n            fontSize: '200%',\n            cursor: 'pointer',\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 47\n        }, this), \"paragraph \", props.count, \"/\", props.paragraphnum, /*#__PURE__*/_jsxDEV(NavigateNextIcon, {\n          onClick: onClickNext,\n          style: {\n            fontSize: '200%',\n            cursor: 'pointer',\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '3%',\n          fontWeight: 'bold',\n          backgroundColor: 'white'\n        },\n        children: \"How many main ideas are discussed in this paragraph? See definition of a \\\"main idea\\\" above. To distinguish between \\\"main ideas\\\" and simply supporting ideas, consider how main ideas are broad; supporting ideas can be subsumed under a broader main idea category. Paragraphs may provide clues such as transitions to indicate separate ideas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"text1\",\n          value: input.text1,\n          autoComplete: \"off\",\n          placeholder: \"Enter number\",\n          className: \"form-control\",\n          style: {\n            marginTop: '2%',\n            width: '20%',\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 'bold',\n          backgroundColor: 'white'\n        },\n        children: \"How well does this paragraph develop from / fit with the thesis statement (if applicable) and prompt? (Scale of 1 to 4)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"text2\",\n          value: input.text2,\n          autoComplete: \"off\",\n          placeholder: \"Enter number\",\n          className: \"form-control\",\n          style: {\n            marginTop: '2%',\n            width: '20%',\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 'bold',\n          backgroundColor: 'white'\n        },\n        children: \"How well does this paragraph connect to/transition from/follow the previous paragraph? (Scale of 1 to 4) Write \\\"N/A\\\" if there is only one paragraph in the whole text.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"text3\",\n          value: input.text3,\n          autoComplete: \"off\",\n          placeholder: \"Enter number\",\n          className: \"form-control\",\n          style: {\n            marginTop: '2%',\n            width: '20%',\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 'bold',\n          backgroundColor: 'white'\n        },\n        children: \"On a scale of 1 to 4, how well does this paragraph evidence the claim made in the topic sentence? Write N/A if there is no topic sentence.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"text4\",\n          value: input.text4,\n          autoComplete: \"off\",\n          placeholder: \"Enter number\",\n          className: \"form-control\",\n          style: {\n            marginTop: '2%',\n            width: '20%',\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: 'bold',\n          backgroundColor: 'white'\n        },\n        children: \"On a scale of 1 to 4, how strong is this paragraph's topic sentence? Write N/A if there is no topic sentence.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          backgroundColor: 'white'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          name: \"text5\",\n          value: input.text5,\n          autoComplete: \"off\",\n          placeholder: \"Enter number\",\n          className: \"form-control\",\n          style: {\n            marginTop: '2%',\n            width: '20%',\n            backgroundColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: '45%'\n        },\n        onClick: handleClick,\n        className: \"btn btn-lg btn-info\",\n        children: \"DONE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ParagraphLevel, \"X1zluUxMu0gmPJhscdnoBYP3UmM=\");\n\n_c = ParagraphLevel;\n;\nexport default ParagraphLevel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParagraphLevel\");","map":{"version":3,"sources":["/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/paragraphlevelform.js"],"names":["React","useState","axios","NavigateBeforeIcon","NavigateNextIcon","ParagraphLevel","props","input","setInput","selectOptions","title","type","rater","paragraph","count","currentparagraph","text1","text2","text3","text4","text5","handleChange","event","name","value","target","prevInput","onClickNext","onClickPrevious","entiretext","text","splittedtext","split","filteredtext","filter","item","handleClick","preventDefault","newNote","post","paragraphnum","setCount","marginTop","fontSize","backgroundColor","letterSpacing","cursor","fontWeight","width","marginLeft"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from \"axios\";\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nfunction ParagraphLevel(props) {\n    const [input, setInput] = useState({\n        selectOptions : [],\n        title: '',\n        type: 'paragraphlevel',\n        rater: '',\n        paragraph: props.count,\n        currentparagraph: '',\n        text1: '',\n        text2: '',\n        text3: '',\n        text4: '',\n        text5: '',\n    })\n\n    function handleChange(event) {\n        const {name, value} = event.target;\n\n        setInput(prevInput => {\n            return {\n                ...prevInput,\n                [name]: value\n            }\n        })\n    };\n\n    // function onClickPrevious(){\n    //     if (count > 1) {\n            //setCount(prevCount => prevCount - 1)\n    //     }\n    // }\n\n   \n    // function onClickNext(){\n    //     if (count < props.paragraphnum) {\n    //         setCount(prevCount => prevCount + 1)\n    //     }\n    // }\n\n    function onClickNext(){\n        props.onClickNext()\n        }\n\n    function onClickPrevious(){\n        props.onClickPrevious()\n            }\n    \n\n\n    let entiretext = props.text;\n    let splittedtext = entiretext.split(/\\r?\\n/);\n    let filteredtext = splittedtext.filter(item => item);\n    let currentparagraph = filteredtext[count-1];\n\n    function handleClick(event) {\n        event.preventDefault();\n            const newNote= {\n                title: props.title,\n                type: 'paragraphlevel',\n                paragraph: count,\n                rater: props.rater,\n                text1: input.text1,\n                text2: input.text2,\n                text3: input.text3,\n                text4: input.text4,\n                text5: input.text5\n            }\n            \n            axios.post('https://textratingtool.herokuapp.com/create', newNote)\n\n            if (count === props.paragraphnum) {\n                setCount(1)\n            }\n\n    \n            setInput({\n            title: '',\n            paragraph: '',\n            rater: props.rater,\n            text1: '',\n            text2: '',\n            text3: '',\n            text4: '',\n            text5: '',\n              })\n    };\n\n    return ( \n        <div className='container' style={{marginTop:'5%', fontSize:\"80%\", backgroundColor:'white'}}>\n        \n        <form style={{letterSpacing:'1px', backgroundColor:'white'}}>\n        <h3 style={{backgroundColor:'white'}}><NavigateBeforeIcon onClick={onClickPrevious} style={{fontSize:'200%', cursor:'pointer', backgroundColor:'white'}}/> \n        paragraph {props.count}/{props.paragraphnum} \n        <NavigateNextIcon onClick={onClickNext} style={{fontSize:'200%', cursor:'pointer', backgroundColor:'white'}}/></h3>\n        <p>{props.count}</p>\n\n        <p style={{marginTop:'3%', fontWeight:'bold', backgroundColor:'white'}}>How many main ideas are discussed in this paragraph? See definition of a \"main idea\" above. To distinguish between \"main ideas\" and simply supporting ideas, consider how\nmain ideas are broad; supporting ideas can be subsumed under a broader main idea category. Paragraphs may provide clues such as transitions to indicate separate ideas.</p>\n            <div className=\"form-group\" style={{backgroundColor:'white'}}>\n                <input onChange={handleChange} name=\"text1\" value={input.text1} autoComplete=\"off\" placeholder=\"Enter number\" className=\"form-control\" style={{marginTop:'2%', width:'20%', backgroundColor:'white'}}></input>\n            </div>\n\n        <p style={{fontWeight:'bold', backgroundColor:'white'}}>How well does this paragraph develop from / fit with the thesis statement (if applicable) and prompt? (Scale of 1 to 4)</p>\n            <div className=\"form-group\" style={{backgroundColor:'white'}}>\n                <input onChange={handleChange} name=\"text2\" value={input.text2} autoComplete=\"off\" placeholder=\"Enter number\" className=\"form-control\" style={{marginTop:'2%', width:'20%', backgroundColor:'white'}}></input>\n            </div>\n\n        <p style={{fontWeight:'bold', backgroundColor:'white'}}>How well does this paragraph connect to/transition from/follow the previous paragraph? (Scale of 1 to 4) Write \"N/A\" if there is only one paragraph in the whole text.</p>\n            <div className=\"form-group\" style={{backgroundColor:'white'}}>\n                <input onChange={handleChange} name=\"text3\" value={input.text3} autoComplete=\"off\" placeholder=\"Enter number\" className=\"form-control\" style={{marginTop:'2%', width:'20%', backgroundColor:'white'}}></input>\n            </div>\n\n        <p style={{fontWeight:'bold', backgroundColor:'white'}}>On a scale of 1 to 4, how well does this paragraph evidence the claim made in the topic sentence? Write N/A if there is no topic sentence.</p>\n            <div className=\"form-group\" style={{backgroundColor:'white'}}>\n                <input onChange={handleChange} name=\"text4\" value={input.text4} autoComplete=\"off\" placeholder=\"Enter number\" className=\"form-control\" style={{marginTop:'2%', width:'20%', backgroundColor:'white'}}></input>\n            </div>\n\n        <p style={{fontWeight:'bold', backgroundColor:'white'}}>On a scale of 1 to 4, how strong is this paragraph's topic sentence? Write N/A if there is no topic sentence.</p>\n            <div className=\"form-group\" style={{backgroundColor:'white'}}>\n                <input onChange={handleChange} name=\"text5\" value={input.text5} autoComplete=\"off\" placeholder=\"Enter number\" className=\"form-control\" style={{marginTop:'2%',width:'20%', backgroundColor:'white'}}></input>\n            </div>\n\n            <button style={{marginLeft:'45%'}} onClick={handleClick} className=\"btn btn-lg btn-info\">DONE</button>\n        </form>\n        </div>\n    )};\n\nexport default ParagraphLevel;"]},"metadata":{},"sourceType":"module"}