{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/test.js\";\nimport React, { useEffect, useState, Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Test extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.componentDidMount = () => {\n      this.getTexts();\n    };\n\n    this.getTexts = () => {\n      axios.get('/rating').then(response => {\n        const data = response.data;\n        this.setState({\n          posts: data\n        });\n        console.log('Data has been received!!');\n      }).catch(() => {\n        alert('Error retrieving data!!!');\n      });\n    };\n  }\n\n  handleChange(e) {\n    console.log(e.target.value);\n  }\n\n  render() {\n    getTexts = () => {\n      axios.get('/rating').then(response => {\n        const data = response.data;\n        this.setState({\n          posts: data\n        });\n        console.log('Data has been received!!');\n      }).catch(() => {\n        alert('Error retrieving data!!!');\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: this.handleChange,\n      children: posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: post,\n          children: [\" \", post, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/test.js"],"names":["React","useEffect","useState","Component","axios","Test","state","posts","componentDidMount","getTexts","get","then","response","data","setState","console","log","catch","alert","handleChange","e","target","value","render","map","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACvBG,KADuB,GACf;AACNC,MAAAA,KAAK,EAAE;AADD,KADe;;AAAA,SAKzBC,iBALyB,GAKL,MAAM;AACtB,WAAKC,QAAL;AACD,KAPsB;;AAAA,SASvBA,QATuB,GASZ,MAAM;AACfL,MAAAA,KAAK,CAACM,GAAN,CAAU,SAAV,EACGC,IADH,CACSC,QAAD,IAAc;AAClB,cAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,aAAKC,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAEM;AAAT,SAAd;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,OALH,EAMGC,KANH,CAMS,MAAM;AACXC,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,OARH;AASD,KAnBsB;AAAA;;AAsBzBC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAC,CAACC,MAAF,CAASC,KAArB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACLd,IAAAA,QAAQ,GAAG,MAAM;AACbL,MAAAA,KAAK,CAACM,GAAN,CAAU,SAAV,EACGC,IADH,CACSC,QAAD,IAAc;AAClB,cAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,aAAKC,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAEM;AAAT,SAAd;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,OALH,EAMGC,KANH,CAMS,MAAM;AACXC,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACD,OARH;AASD,KAVH;;AAWF,wBACE;AAAQ,MAAA,QAAQ,EAAE,KAAKC,YAAvB;AAAA,gBACIZ,KAAK,CAACiB,GAAN,CAAUC,IAAI,IAAI;AACjB,4BACE;AAAQ,UAAA,KAAK,EAAEA,IAAf;AAAA,0BAAuBA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA/CwB;;AAkD3B,eAAepB,IAAf","sourcesContent":["import React, { useEffect, useState, Component } from 'react';\nimport axios from 'axios';\n\nclass Test extends Component {\n      state = {\n        posts: []\n    }\n\n    componentDidMount = () => {\n        this.getTexts();\n      };\n\n      getTexts = () => {\n        axios.get('/rating')\n          .then((response) => {\n            const data = response.data;\n            this.setState({ posts: data });\n            console.log('Data has been received!!');\n          })\n          .catch(() => {\n            alert('Error retrieving data!!!');\n          });\n      }\n    \n  \n    handleChange(e) {\n      console.log(e.target.value)\n    }\n  \n    render() {\n        getTexts = () => {\n            axios.get('/rating')\n              .then((response) => {\n                const data = response.data;\n                this.setState({ posts: data });\n                console.log('Data has been received!!');\n              })\n              .catch(() => {\n                alert('Error retrieving data!!!');\n              });\n          }\n      return (\n        <select onChange={this.handleChange}>\n           {posts.map(post => {\n             return (\n               <option value={post}> {post} </option>\n             )\n           })}\n      </select>\n      )\n    }\n  }\n\n  export default Test;"]},"metadata":{},"sourceType":"module"}