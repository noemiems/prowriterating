{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/paragraphlevelform.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ParagraphLevel() {\n  _s();\n\n  const questions = [{\n    questionText: 'How many main ideas are discussed in this paragraph? See definition of a \"main idea\" above. To distinguish between \"main ideas\" and simply supporting ideas, consider how main ideas are broad; supporting ideas can be subsumed under a broader main idea category. Paragraphs may provide clues such as transitions to indicate separate ideas.',\n    answerOptions: [{\n      answerText: '0'\n    }, {\n      answerText: '1'\n    }, {\n      answerText: '2'\n    }, {\n      answerText: '3'\n    }, {\n      answerText: '4'\n    }, {\n      answerText: '5'\n    }, {\n      answerText: '6'\n    }, {\n      answerText: '7'\n    }, {\n      answerText: '8'\n    }]\n  }, {\n    questionText: 'How well does this paragraph develop from / fit with the thesis statement (if applicable) and prompt?',\n    answerOptions: [{\n      answerText: 'NA'\n    }, {\n      answerText: '1'\n    }, {\n      answerText: '2'\n    }, {\n      answerText: '3'\n    }, {\n      answerText: '4'\n    }]\n  }, {\n    questionText: 'How well does this paragraph connect to/transition from/follow the previous paragraph? Write \"N/A\" if there is only one paragraph in the whole text.',\n    answerOptions: [{\n      answerText: 'NA'\n    }, {\n      answerText: '1'\n    }, {\n      answerText: '2'\n    }, {\n      answerText: '3'\n    }, {\n      answerText: '4'\n    }]\n  }, {\n    questionText: 'How well does this paragraph evidence the claim made in the topic sentence? Write N/A if there is no topic sentence.',\n    answerOptions: [{\n      answerText: 'NA'\n    }, {\n      answerText: '1'\n    }, {\n      answerText: '2'\n    }, {\n      answerText: '3'\n    }, {\n      answerText: '4'\n    }]\n  }, {\n    questionText: 'On a scale of 1 to 4, how strong is this paragraph\\'s topic sentence? Write N/A if there is no topic sentence.',\n    answerOptions: [{\n      answerText: 'NA'\n    }, {\n      answerText: '1'\n    }, {\n      answerText: '2'\n    }, {\n      answerText: '3'\n    }, {\n      answerText: '4'\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const handleAnswerOptionClick = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    event.preventDefault();\n    const answer = event.value;\n    axios.post('http://localhost:8080/create', answer);\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    }\n  };\n\n  const [input, setInput] = useState({\n    title: '',\n    q1: '',\n    q2: '',\n    q3: '',\n    q4: '',\n    q5: ''\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setInput(prevInput => {\n      return { ...prevInput,\n        [name]: value\n      };\n    });\n  }\n\n  ;\n\n  function handleClick(event) {\n    event.preventDefault();\n    const newForm = {\n      title: input.title,\n      q1: input.q1,\n      q2: input.q2,\n      q3: input.q3,\n      q4: input.q4,\n      q5: input.q5\n    };\n    console.log(`${newForm}`);\n    axios.post('http://localhost:8080/create', newForm);\n    setInput({\n      title: '',\n      q1: '',\n      q2: '',\n      q3: '',\n      q4: '',\n      q5: ''\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-count\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Question \", currentQuestion + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 8\n        }, this), \"/\", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: questions[currentQuestion].questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-section\",\n      children: questions[currentQuestion].answerOptions.map(answerOption => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswerOptionClick,\n        children: answerOption.answerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 8\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 6\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ParagraphLevel, \"izNNwCzAAXZD8Q/9oD3SY6msvMw=\");\n\n_c = ParagraphLevel;\n;\nexport default ParagraphLevel;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParagraphLevel\");","map":{"version":3,"sources":["/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/paragraphlevelform.js"],"names":["React","useState","axios","ParagraphLevel","questions","questionText","answerOptions","answerText","currentQuestion","setCurrentQuestion","handleAnswerOptionClick","event","name","value","target","preventDefault","answer","post","nextQuestion","length","input","setInput","title","q1","q2","q3","q4","q5","handleChange","prevInput","handleClick","newForm","console","log","map","answerOption"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport axios from \"axios\";\n\nfunction ParagraphLevel() {\n\n    const questions = [\n\t\t{\n\t\t\tquestionText: 'How many main ideas are discussed in this paragraph? See definition of a \"main idea\" above. To distinguish between \"main ideas\" and simply supporting ideas, consider how main ideas are broad; supporting ideas can be subsumed under a broader main idea category. Paragraphs may provide clues such as transitions to indicate separate ideas.',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '0' },\n\t\t\t\t{ answerText: '1' },\n                { answerText: '2' },\n                { answerText: '3' },\n                { answerText: '4' },\n                { answerText: '5' },\n                { answerText: '6' },\n                { answerText: '7' },\n                { answerText: '8' },\n\n\t\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How well does this paragraph develop from / fit with the thesis statement (if applicable) and prompt?',\n\t\t\tanswerOptions: [\n                { answerText: 'NA'},\n\t\t\t\t{ answerText: '1'},\n\t\t\t\t{ answerText: '2'},\n\t\t\t\t{ answerText: '3'},\n\t\t\t\t{ answerText: '4'},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How well does this paragraph connect to/transition from/follow the previous paragraph? Write \"N/A\" if there is only one paragraph in the whole text.',\n\t\t\tanswerOptions: [\n                { answerText: 'NA'},\n\t\t\t\t{ answerText: '1'},\n\t\t\t\t{ answerText: '2'},\n\t\t\t\t{ answerText: '3'},\n\t\t\t\t{ answerText: '4'},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How well does this paragraph evidence the claim made in the topic sentence? Write N/A if there is no topic sentence.',\n\t\t\tanswerOptions: [\n                { answerText: 'NA'},\n\t\t\t\t{ answerText: '1'},\n\t\t\t\t{ answerText: '2'},\n\t\t\t\t{ answerText: '3'},\n\t\t\t\t{ answerText: '4'},\n\t\t\t],\n\t\t},\n        {\n\t\t\tquestionText: 'On a scale of 1 to 4, how strong is this paragraph\\'s topic sentence? Write N/A if there is no topic sentence.',\n\t\t\tanswerOptions: [\n                { answerText: 'NA'},\n\t\t\t\t{ answerText: '1'},\n\t\t\t\t{ answerText: '2'},\n\t\t\t\t{ answerText: '3'},\n\t\t\t\t{ answerText: '4'},\n\t\t\t],\n\t\t},\n\t];\n\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n\n    const handleAnswerOptionClick = (event) => {\n        const {name, value} = event.target;\n        event.preventDefault();\n        const answer = event.value;\n        axios.post('http://localhost:8080/create', answer)\n\t\t\n        const nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t}\n\t};\n    \n    const [input, setInput] = useState({\n        title: '',\n        q1: '',\n        q2: '',\n        q3: '',\n        q4: '',\n        q5: ''\n    })\n\n    function handleChange(event) {\n        const {name, value} = event.target;\n\n        setInput(prevInput => {\n            return {\n                ...prevInput,\n                [name]: value\n            }\n        })\n    };\n\n    function handleClick(event) {\n        event.preventDefault();\n        const newForm = {\n            title: input.title,\n            q1: input.q1,\n            q2: input.q2,\n            q3: input.q3,\n            q4: input.q4,\n            q5: input.q5\n        }\n\n        console.log(`${newForm}`)\n        axios.post('http://localhost:8080/create', newForm)\n\n        setInput({\n        title: '',\n        q1: '',\n        q2: '',\n        q3: '',\n        q4: '',\n        q5: ''\n          });\n    }\n\n    return (\n\t\t<div className='app'>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t)\n\t\t</div>\n\t);};\n\nexport default ParagraphLevel;"]},"metadata":{},"sourceType":"module"}