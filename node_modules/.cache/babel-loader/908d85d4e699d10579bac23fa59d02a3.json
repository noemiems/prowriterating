{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/dropdown.js\";\nimport React, { useEffect, useState, Component } from 'react';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dropdown extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      body: '',\n      posts: []\n    };\n\n    this.componentDidMount = () => {\n      this.getBlogPost();\n    };\n\n    this.getBlogPost = () => {\n      axios.get('/rating').then(response => {\n        const data = response.data;\n        this.setState({\n          posts: data\n        });\n        console.log('Data has been received!!');\n      });\n      this.handleChange = this.handleChange.bind(this).catch(() => {\n        alert('Error retrieving data!!!');\n      });\n    };\n\n    this.handleChange = ({\n      target\n    }) => {\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submit = event => {\n      event.preventDefault();\n      const payload = {\n        title: this.state.title,\n        body: this.state.body\n      };\n      axios({\n        url: '/create',\n        method: 'POST',\n        data: payload\n      }).then(() => {\n        console.log('Data has been sent to the server');\n        this.resetUserInputs();\n        this.getBlogPost();\n      }).catch(() => {\n        console.log('Internal server error');\n      });\n      ;\n    };\n\n    this.resetUserInputs = () => {\n      this.setState({\n        title: '',\n        body: ''\n      });\n    };\n\n    this.displayBlogPost = posts => {\n      if (!posts.length) return null;\n      return posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-post__display\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          onChange: this.Change,\n          children: posts.map(post => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: post,\n              children: [\" \", post, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this));\n    };\n  }\n\n  Change(e) {\n    console.log(e.target.value);\n  }\n\n  render() {\n    //console.log('State: ', this.state);\n    //JSX\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-\",\n        children: this.displayBlogPost(this.state.posts)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Dropdown;","map":{"version":3,"sources":["/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/dropdown.js"],"names":["React","useEffect","useState","Component","Select","axios","Dropdown","state","title","body","posts","componentDidMount","getBlogPost","get","then","response","data","setState","console","log","handleChange","bind","catch","alert","target","name","value","submit","event","preventDefault","payload","url","method","resetUserInputs","displayBlogPost","length","map","post","index","Change","e","render"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Component } from 'react';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass Dropdown extends React.Component {\n\n    state = {\n    title: '',\n    body: '',\n    posts: []\n    };\n  \n    componentDidMount = () => {\n      this.getBlogPost();\n    };\n  \n  \n    getBlogPost = () => {\n      axios.get('/rating')\n        .then((response) => {\n          const data = response.data;\n          this.setState({ posts: data });\n          console.log('Data has been received!!');\n        })\n        this.handleChange = this.handleChange.bind(this)\n        .catch(() => {\n          alert('Error retrieving data!!!');\n        });\n    }\n  \n    handleChange = ({ target }) => {\n      const { name, value } = target;\n      this.setState({ [name]: value });\n    };\n\n    Change(e) {\n        console.log(e.target.value)\n      }\n  \n  \n    submit = (event) => {\n      event.preventDefault();\n  \n      const payload = {\n        title: this.state.title,\n        body: this.state.body\n      };\n  \n  \n      axios({\n        url: '/create',\n        method: 'POST',\n        data: payload\n      })\n        .then(() => {\n          console.log('Data has been sent to the server');\n          this.resetUserInputs();\n          this.getBlogPost();\n        })\n        .catch(() => {\n          console.log('Internal server error');\n        });;\n    };\n  \n    resetUserInputs = () => {\n      this.setState({\n        title: '',\n        body: ''\n      });\n    };\n  \n    displayBlogPost = (posts) => {\n  \n      if (!posts.length) return null;\n  \n      return posts.map((post, index) => (\n        <div key={index} className=\"blog-post__display\">\n          <h3>{post.title}</h3>\n        \n        <Select onChange={this.Change}>\n        {posts.map(post => {\n          return (\n            <option value={post}> {post} </option>\n          )\n        })}\n       </Select>\n       </div>\n      ));\n    };\n  \n    render() {\n  \n      //console.log('State: ', this.state);\n      //JSX\n      return(\n        <div className=\"dropdown\">\n  \n          <div className=\"blog-\">\n            {this.displayBlogPost(this.state.posts)}\n          </div>\n        </div>\n      );\n    }\n  }\n\nexport default Dropdown;\n\n"]},"metadata":{},"sourceType":"module"}