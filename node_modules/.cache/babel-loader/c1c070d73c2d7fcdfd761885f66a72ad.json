{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/test.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DropDown() {\n  _s();\n\n  const [loading, setLoading] = React.useState(true);\n  const [items, setItems] = React.useState([]);\n  const [value, setValue] = React.useState(\"R2-D2\");\n  React.useEffect(() => {\n    let unmounted = false;\n\n    async function getTexts() {\n      const response = await fetch(\"http://localhost:8080/rating\");\n      const body = await response.json();\n\n      if (!unmounted) {\n        setItems(body.results.map(({\n          name\n        }) => ({\n          label: name,\n          value: name\n        })));\n        setLoading(false);\n      }\n    }\n\n    getTexts();\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    disabled: loading,\n    value: value,\n    onChange: e => setValue(e.currentTarget.value),\n    children: items.map(({\n      label,\n      value\n    }) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: value,\n      children: label\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropDown, \"+d4ASFbiK6BBy8QsU/eOaErECas=\");\n\n_c = DropDown;\nexport default function Drop() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dropdown\",\n    children: /*#__PURE__*/_jsxDEV(DropDown, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Drop;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DropDown\");\n$RefreshReg$(_c2, \"Drop\");","map":{"version":3,"sources":["/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/test.js"],"names":["React","DropDown","loading","setLoading","useState","items","setItems","value","setValue","useEffect","unmounted","getTexts","response","fetch","body","json","results","map","name","label","e","currentTarget","Drop"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,KAAK,CAACI,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACI,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACI,QAAN,CAAe,OAAf,CAA1B;AACAJ,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpB,QAAIC,SAAS,GAAG,KAAhB;;AACA,mBAAeC,QAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8BAD0B,CAA5B;AAGA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAI,CAACL,SAAL,EAAgB;AACdJ,QAAAA,QAAQ,CACNQ,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiB,CAAC;AAAEC,UAAAA;AAAF,SAAD,MAAe;AAAEC,UAAAA,KAAK,EAAED,IAAT;AAAeX,UAAAA,KAAK,EAAEW;AAAtB,SAAf,CAAjB,CADM,CAAR;AAGAf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AACDQ,IAAAA,QAAQ;AACR,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,IAAZ;AACD,KAFD;AAGD,GAlBD,EAkBG,EAlBH;AAoBA,sBACE;AACE,IAAA,QAAQ,EAAER,OADZ;AAEE,IAAA,KAAK,EAAEK,KAFT;AAGE,IAAA,QAAQ,EAAGa,CAAD,IAAOZ,QAAQ,CAACY,CAAC,CAACC,aAAF,CAAgBd,KAAjB,CAH3B;AAAA,cAKGF,KAAK,CAACY,GAAN,CAAU,CAAC;AAAEE,MAAAA,KAAF;AAASZ,MAAAA;AAAT,KAAD,kBACT;AAAoB,MAAA,KAAK,EAAEA,KAA3B;AAAA,gBACGY;AADH,OAAaZ,KAAb;AAAA;AAAA;AAAA;AAAA,YADD;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GArCQN,Q;;KAAAA,Q;AAuCT,eAAe,SAASqB,IAAT,GAAgB;AAC7B,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;MANuBA,I","sourcesContent":["import React from \"react\";\n\nfunction DropDown() {\n  const [loading, setLoading] = React.useState(true);\n  const [items, setItems] = React.useState([]);\n  const [value, setValue] = React.useState(\"R2-D2\");\n  React.useEffect(() => {\n    let unmounted = false;\n    async function getTexts() {\n      const response = await fetch(\n        \"http://localhost:8080/rating\"\n      );\n      const body = await response.json();\n      if (!unmounted) {\n        setItems(\n          body.results.map(({ name }) => ({ label: name, value: name }))\n        );\n        setLoading(false);\n      }\n    }\n    getTexts();\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  return (\n    <select\n      disabled={loading}\n      value={value}\n      onChange={(e) => setValue(e.currentTarget.value)}\n    >\n      {items.map(({ label, value }) => (\n        <option key={value} value={value}>\n          {label}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport default function Drop() {\n  return (\n    <div className=\"Dropdown\">\n      <DropDown />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}