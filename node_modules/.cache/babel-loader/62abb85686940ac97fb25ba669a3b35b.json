{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/Rating.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, Component } from 'react';\nimport Dropdown from './dropdown';\nimport axios from 'axios';\nimport Textform from './textlevelform';\nimport ParagraphLevel from './paragraphlevelform';\nimport './rating.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Thisisatest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectOptions: [],\n      id: \"\",\n      title: '',\n      text: ''\n    };\n  }\n\n  async getOptions() {\n    const res = await axios.get('/rating');\n    const data = res.data;\n    const options = data.map(d => ({\n      \"value\": d.id,\n      \"label\": d.title,\n      \"content\": d.text\n    }));\n    this.setState({\n      selectOptions: options\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      id: e.value,\n      title: e.label,\n      text: e.content\n    });\n    const currentTitle = this.state.title;\n  }\n\n  componentDidMount() {\n    this.getOptions();\n  }\n\n  render() {\n    console.log(this.state.selectOptions);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Please choose text\",\n        options: this.state.selectOptions,\n        onChange: this.handleChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: '5%'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: this.state.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '5%',\n          whiteSpace: \"pre-line\"\n        },\n        children: this.state.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction RateText() {\n  _s();\n\n  const [notes, setNotes] = useState([{\n    title: '',\n    text: ''\n  }]);\n  const [category, setCategory] = React.useState('');\n\n  const handleCategoryChange = category => {\n    setCategory(category);\n  };\n\n  useEffect(() => {\n    fetch(\"/rating\").then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonRes => setNotes(jsonRes));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category\",\n            value: category,\n            onChange: event => handleCategoryChange(event.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              id: \"0\",\n              children: \"Text level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              id: \"1\",\n              children: \"Paragraph level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: category === \"Text level\" && /*#__PURE__*/_jsxDEV(Textform, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: category === \"Paragraph level\" && /*#__PURE__*/_jsxDEV(ParagraphLevel, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 13\n  }, this);\n}\n\n_s(RateText, \"IE+sqw9R9LVS/liMyEoyVGgyR+g=\");\n\n_c = RateText;\n;\nexport default RateText;\n\nvar _c;\n\n$RefreshReg$(_c, \"RateText\");","map":{"version":3,"sources":["/mnt/c/Users/noemie/Desktop/prowriterating/front/src/components/Rating.jsx"],"names":["React","useEffect","useState","Component","Dropdown","axios","Textform","ParagraphLevel","Thisisatest","constructor","props","state","selectOptions","id","title","text","getOptions","res","get","data","options","map","d","setState","handleChange","e","value","label","content","currentTitle","componentDidMount","render","console","log","bind","marginTop","whiteSpace","RateText","notes","setNotes","category","setCategory","handleCategoryChange","fetch","then","ok","json","jsonRes","event","target"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, Component} from 'react';\nimport Dropdown from './dropdown';\nimport axios from 'axios';\nimport Textform from './textlevelform';\nimport ParagraphLevel from './paragraphlevelform';\nimport './rating.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass Thisisatest extends Component {\n\n    constructor(props){\n      super(props)\n      this.state = {\n        selectOptions : [],\n        id: \"\",\n        title: '',\n        text: ''\n      }\n    }\n  \n   async getOptions(){\n      const res = await axios.get('/rating')\n      const data = res.data\n  \n      const options = data.map(d => ({\n        \"value\" : d.id,\n        \"label\" : d.title,\n        \"content\": d.text\n  \n      }))\n  \n      this.setState({selectOptions: options})\n  \n    }\n  \n    handleChange(e){\n     this.setState({id:e.value, title:e.label, text:e.content})\n     const currentTitle = this.state.title\n    }\n  \n    componentDidMount(){\n        this.getOptions()\n    }\n  \n    render() {\n      console.log(this.state.selectOptions)\n      return (\n        <div>\n          <Select placeholder=\"Please choose text\" options={this.state.selectOptions} onChange={this.handleChange.bind(this)} />\n      <h3 style={{marginTop:'5%'}}><strong>{this.state.title}</strong></h3>\n      <p style={{marginTop:'5%', whiteSpace:\"pre-line\"}}>{this.state.text}</p>\n        </div>\n      )\n    }\n  }\n\nfunction RateText() {\n\n    const [notes, setNotes] = useState([{\n        title: '',\n        text: ''\n    }])\n\n    const [category, setCategory] = React.useState('');\n\n    const handleCategoryChange = (category) => {\n       setCategory(category);\n   }\n\n    useEffect(() => {\n        fetch(\"/rating\").then(res => {\n           if(res.ok) {\n               return res.json()\n           }\n        }).then(jsonRes => setNotes(jsonRes));\n    })\n\n        \n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n            <div className=\"col\">\n            <div className=\"box\">\n                <Dropdown />\n            </div>\n            </div>\n        <div className=\"col\">\n          <div className=\"box\">\n          <select name=\"category\" value={category} onChange={event => handleCategoryChange(event.target.value)}>\n            <option id=\"0\" >Text level</option>\n            <option id=\"1\" >Paragraph level</option>\n    \n        </select>\n        <p>{category === \"Text level\" && (\n        <Textform />)}</p>\n        <p>{category === \"Paragraph level\" && (\n        <ParagraphLevel />)}</p>\n</div>\n</div>\n    </div>\n            \n    </div>\n    \n    )};\n\nexport default RateText;"]},"metadata":{},"sourceType":"module"}